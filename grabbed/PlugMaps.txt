n  [c           @<Plug>(GitGutterPrevHunk)
n  \hp          @<Plug>(GitGutterPreviewHunk)
n  \hu          @<Plug>(GitGutterUndoHunk)
n  \hs          @<Plug>(GitGutterStageHunk)
x  \hs          @<Plug>(GitGutterStageHunk)
n  ]c           @<Plug>(GitGutterNextHunk)
x  ac           @<Plug>(GitGutterTextObjectOuterVisual)
o  ac           @<Plug>(GitGutterTextObjectOuterPending)
x  ic           @<Plug>(GitGutterTextObjectInnerVisual)
o  ic           @<Plug>(GitGutterTextObjectInnerPending)
   #             <Plug>(asterisk-#)
o  %             <Ignore><Plug>(matchup-%)
x  %             <Plug>(matchup-%)
n  %             <Plug>(matchup-%)
   *             <Plug>(asterisk-*)
x  F             <Plug>(QuickScopeF)
o  F             <Plug>(QuickScopeF)
n  F             <Plug>(QuickScopeF)
x  S             <Plug>VSurround
x  T             <Plug>(QuickScopeT)
o  T             <Plug>(QuickScopeT)
n  T             <Plug>(QuickScopeT)
o  [%            <Plug>(matchup-[%)
x  [%            <Plug>(matchup-[%)
n  [%            <Plug>(matchup-[%)
n  \ba           <Plug>BufKillAlt
n  \bundo        <Plug>BufKillUndo
n  \!bw          <Plug>BufKillBangBw
n  \bw           <Plug>BufKillBw
n  \!bd          <Plug>BufKillBangBd
n  \!bun         <Plug>BufKillBangBun
n  \bun          <Plug>BufKillBun
n  \\w           <Plug>(easymotion-overwin-w)
ov \\w           <Plug>(easymotion-bd-w)
n  \\f           <Plug>(easymotion-overwin-f)
ov \\f           <Plug>(easymotion-bd-f)
   \\            <Plug>(easymotion-prefix)
n  \pb           <Plug>(PickerBuffer)
n  \pe           <Plug>(PickerEdit)
n  \caL          <Plug>CalendarH
n  \cal          <Plug>CalendarV
n  \\0           <Plug>FontsizeDefault
n  \\-           <Plug>FontsizeDec
n  \\+           <Plug>FontsizeInc
n  \\=           <Plug>FontsizeBegin
n  \ca           <Plug>NERDCommenterAltDelims
x  \cu           <Plug>NERDCommenterUncomment
n  \cu           <Plug>NERDCommenterUncomment
x  \cb           <Plug>NERDCommenterAlignBoth
n  \cb           <Plug>NERDCommenterAlignBoth
x  \cl           <Plug>NERDCommenterAlignLeft
n  \cl           <Plug>NERDCommenterAlignLeft
n  \cA           <Plug>NERDCommenterAppend
x  \cy           <Plug>NERDCommenterYank
n  \cy           <Plug>NERDCommenterYank
x  \cs           <Plug>NERDCommenterSexy
n  \cs           <Plug>NERDCommenterSexy
x  \ci           <Plug>NERDCommenterInvert
n  \ci           <Plug>NERDCommenterInvert
n  \c$           <Plug>NERDCommenterToEOL
x  \cn           <Plug>NERDCommenterNested
n  \cn           <Plug>NERDCommenterNested
x  \cm           <Plug>NERDCommenterMinimal
n  \cm           <Plug>NERDCommenterMinimal
x  \c<Space>     <Plug>NERDCommenterToggle
n  \c<Space>     <Plug>NERDCommenterToggle
x  \cc           <Plug>NERDCommenterComment
n  \cc           <Plug>NERDCommenterComment
o  ]%            <Plug>(matchup-]%)
x  ]%            <Plug>(matchup-]%)
n  ]%            <Plug>(matchup-]%)
o  a%            <Plug>(matchup-a%)
x  a%            <Plug>(matchup-a%)
x  af            <Plug>DsfTextObjectA
o  af            <Plug>DsfTextObjectA
n  cS            <Plug>CSurround
n  cs            <Plug>Csurround
n  csnf          <Plug>DsfNextChange
n  csf           <Plug>DsfChange
n  ds            <Plug>Dsurround
n  dsnf          <Plug>DsfNextDelete
n  dsf           <Plug>DsfDelete
x  f             <Plug>(QuickScopef)
o  f             <Plug>(QuickScopef)
n  f             <Plug>(QuickScopef)
x  gx            <Plug>NetrwBrowseXVis
n  gx            <Plug>NetrwBrowseX
x  gS            <Plug>VgSurround
   g#            <Plug>(asterisk-g#)  " rg --no-ignore ' g# '
   g*            <Plug>(asterisk-g*)  " rg --no-ignore ' g\* '
   g/            <Plug>(incsearch-stay)
x  gA            <Plug>(EasyAlign)
n  gA            <Plug>(EasyAlign)
x  gG            <Plug>(open-url-search-google)
n  gG            <Plug>(open-url-search-google)
x  gW            <Plug>(open-url-search-wikipedia)
n  gW            <Plug>(open-url-search-wikipedia)
x  g<CR>         <Plug>(open-url-search)
n  g<CR>         <Plug>(open-url-search)
x  gB            <Plug>(open-url-browser)
n  gB            <Plug>(open-url-browser)
n  ga            <Plug>(characterize)
o  g%            <Ignore><Plug>(matchup-g%)
x  g%            <Plug>(matchup-g%)
n  g%            <Plug>(matchup-g%)
o  i%            <Plug>(matchup-i%)
x  i%            <Plug>(matchup-i%)
x  if            <Plug>DsfTextObjectI
o  if            <Plug>DsfTextObjectI
n  s             <Plug>(easymotion-overwin-f2)
x  t             <Plug>(QuickScopet)
o  t             <Plug>(QuickScopet)
n  t             <Plug>(QuickScopet)
n  ySS           <Plug>YSsurround
n  ySs           <Plug>YSsurround
n  yss           <Plug>Yssurround
n  yS            <Plug>YSurround
n  ys            <Plug>Ysurround
   z#            <Plug>(asterisk-z#)  " rg --no-ignore ' z# '
   z*            <Plug>(asterisk-z*)  " rg --no-ignore ' z\* '
   z/            <Plug>(incsearch-fuzzy-stay)
o  z%            <Plug>(matchup-z%)
x  z%            <Plug>(matchup-z%)
n  z%            <Plug>(matchup-z%)
x  <Plug>NetrwBrowseXVis * :<C-U>call netrw#BrowseXVis()<CR>
n  <Plug>NetrwBrowseX * :call netrw#BrowseX(netrw#GX(),netrw#CheckIfRemote(netrw#GX()))<CR>
n  <Plug>(fzf-normal) * <Nop>
n  <Plug>(fzf-insert) * i
x  <Plug>(peekaboo) * :<C-U>call peekaboo#aboo()<CR>
n  <Plug>(peekaboo) * :<C-U>call peekaboo#aboo()<CR>
   <Plug>BufKillUndo * :call <SNR>110_UndoKill()<CR>
   <Plug>BufKillBangBw * :call <SNR>110_BufKill('bw', '!')<CR>
   <Plug>BufKillBw * :call <SNR>110_BufKill('bw', '')<CR>
   <Plug>BufKillBangBd * :call <SNR>110_BufKill('bd', '!')<CR>
   <Plug>BufKillBd * :call <SNR>110_BufKill('bd', '')<CR>
   <Plug>BufKillBangBun * :call <SNR>110_BufKill('bun', '!')<CR>
   <Plug>BufKillBun * :call <SNR>110_BufKill('bun', '')<CR>
   <Plug>BufKillBangForward * :call <SNR>110_GotoBuffer('bufforward', '!')<CR>
   <Plug>BufKillForward * :call <SNR>110_GotoBuffer('bufforward', '')<CR>
   <Plug>BufKillBangBack * :call <SNR>110_GotoBuffer('bufback', '!')<CR>
   <Plug>BufKillBack * :call <SNR>110_GotoBuffer('bufback', '')<CR>
   <Plug>BufKillBangAlt * :call <SNR>110_GotoBuffer('#', '!')<CR>
   <Plug>BufKillAlt * :call <SNR>110_GotoBuffer('#', '')<CR>
v  <Plug>VgSurround * :<C-U>call <SNR>105_opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>
v  <Plug>VSurround * :<C-U>call <SNR>105_opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>
n  <Plug>YSurround * <SNR>105_opfunc2('setup')
n  <Plug>Ysurround * <SNR>105_opfunc('setup')
n  <Plug>YSsurround * <SNR>105_opfunc2('setup').'_'
n  <Plug>Yssurround * '^'.v:count1.<SNR>105_opfunc('setup').'g_'
n  <Plug>CSurround * :<C-U>call <SNR>105_changesurround(1)<CR>
n  <Plug>Csurround * :<C-U>call <SNR>105_changesurround()<CR>
n  <Plug>Dsurround * :<C-U>call <SNR>105_dosurround(<SNR>105_inputtarget())<CR>
n  <Plug>SurroundRepeat * .
n  <Plug>MarkSearchGroup9Prev * :<C-U>if ! mark#SearchGroupMark(9, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup9Next * :<C-U>if ! mark#SearchGroupMark(9, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup8Prev * :<C-U>if ! mark#SearchGroupMark(8, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup8Next * :<C-U>if ! mark#SearchGroupMark(8, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup7Prev * :<C-U>if ! mark#SearchGroupMark(7, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup7Next * :<C-U>if ! mark#SearchGroupMark(7, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup6Prev * :<C-U>if ! mark#SearchGroupMark(6, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup6Next * :<C-U>if ! mark#SearchGroupMark(6, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup5Prev * :<C-U>if ! mark#SearchGroupMark(5, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup5Next * :<C-U>if ! mark#SearchGroupMark(5, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup4Prev * :<C-U>if ! mark#SearchGroupMark(4, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup4Next * :<C-U>if ! mark#SearchGroupMark(4, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup3Prev * :<C-U>if ! mark#SearchGroupMark(3, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup3Next * :<C-U>if ! mark#SearchGroupMark(3, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup2Prev * :<C-U>if ! mark#SearchGroupMark(2, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup2Next * :<C-U>if ! mark#SearchGroupMark(2, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup1Prev * :<C-U>if ! mark#SearchGroupMark(1, v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroup1Next * :<C-U>if ! mark#SearchGroupMark(1, v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCascadePrevNoStop * :<C-U>if ! mark#cascade#Next(v:count1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCascadeNextNoStop * :<C-U>if ! mark#cascade#Next(v:count1, 0, 0)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCascadeStartNoStop * :<C-U>if ! mark#cascade#Start(v:count, 0)|execute "normal! \<C-\>\<C-n>\<Esc>"   |echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCascadePrevWithStop * :<C-U>if ! mark#cascade#Next(v:count1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCascadeNextWithStop * :<C-U>if ! mark#cascade#Next(v:count1, 1, 0)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCascadeStartWithStop * :<C-U>if ! mark#cascade#Start(v:count, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"   |echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchUsedGroupPrev * :<C-U>if ! mark#SearchNextGroup(v:count1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchUsedGroupNext * :<C-U>if ! mark#SearchNextGroup(v:count1, 0)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroupPrev * :<C-U>if ! mark#SearchGroupMark(v:count, 1, 1, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchGroupNext * :<C-U>if ! mark#SearchGroupMark(v:count, 1, 0, 1)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchAnyOrDefaultPrev * :<C-U>if mark#IsEnabled() && mark#GetCount() > 0|if ! mark#SearchAnyMark(1)|echoerr ingo#err#Get()|endif|else|execute 'normal!' v:count1 . 'Nzv'|endif<CR>
n  <Plug>MarkSearchAnyOrDefaultNext * :<C-U>if mark#IsEnabled() && mark#GetCount() > 0|if ! mark#SearchAnyMark(0)|echoerr ingo#err#Get()|endif|else|execute 'normal!' v:count1 . 'nzv'|endif<CR>
n  <Plug>MarkSearchOrAnyPrev * :<C-U>if ! mark#SearchNext(1,'mark#SearchAnyMark')|execute 'normal!' v:count1 . '#zv'|endif<CR>
n  <Plug>MarkSearchOrAnyNext * :<C-U>if ! mark#SearchNext(0,'mark#SearchAnyMark')|execute 'normal!' v:count1 . '*zv'|endif<CR>
n  <Plug>MarkSearchOrCurPrev * :<C-U>if ! mark#SearchNext(1,'mark#SearchCurrentMark')|execute 'normal!' v:count1 . '#zv'|endif<CR>
n  <Plug>MarkSearchOrCurNext * :<C-U>if ! mark#SearchNext(0,'mark#SearchCurrentMark')|execute 'normal!' v:count1 . '*zv'|endif<CR>
n  <Plug>MarkSearchPrev * :<C-U>if ! mark#SearchNext(1)|execute 'normal!' v:count1 . '#zv'|endif<CR>
n  <Plug>MarkSearchNext * :<C-U>if ! mark#SearchNext(0)|execute 'normal!' v:count1 . '*zv'|endif<CR>
n  <Plug>MarkSearchAnyPrev * :<C-U>if ! mark#SearchAnyMark(1)|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchAnyNext * :<C-U>if ! mark#SearchAnyMark(0)|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCurrentPrev * :<C-U>if ! mark#SearchCurrentMark(1)|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkSearchCurrentNext * :<C-U>if ! mark#SearchCurrentMark(0)|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkToggle * :<C-U>call mark#Toggle()<CR>
n  <Plug>MarkConfirmAllClear * :<C-U>if confirm('Really delete all marks? This cannot be undone.', "&Yes\n&No") == 1|call mark#ClearAll()|endif<CR>
n  <Plug>MarkAllClear * :<C-U>call mark#ClearAll()<CR>
n  <Plug>MarkClear * :<C-U>if ! mark#Clear(v:count)|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
v  <Plug>MarkRegex * :<C-U>if ! mark#MarkRegex(v:count, mark#GetVisualSelectionAsRegexp())|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
n  <Plug>MarkRegex * :<C-U>if ! mark#MarkRegex(v:count, '')|execute "normal! \<C-\>\<C-n>\<Esc>"|echoerr ingo#err#Get()|endif<CR>
v  <Plug>MarkIWhiteSet * :<C-U>if ! mark#DoMark(v:count, mark#GetVisualSelectionAsLiteralWhitespaceIndifferentPattern())[0]|execute "normal! \<C-\>\<C-n>\<Esc>"|endif<CR>
v  <Plug>MarkSet * :<C-U>if ! mark#DoMark(v:count, mark#GetVisualSelectionAsLiteralPattern())[0]|execute "normal! \<C-\>\<C-n>\<Esc>"|endif<CR>
n  <Plug>MarkSet * :<C-U>if ! mark#MarkCurrentWord(v:count)|execute "normal! \<C-\>\<C-n>\<Esc>"|endif<CR>
   <Plug>(easymotion-prefix)N   <Plug>(easymotion-N)
   <Plug>(easymotion-prefix)n   <Plug>(easymotion-n)
   <Plug>(easymotion-prefix)k   <Plug>(easymotion-k)
   <Plug>(easymotion-prefix)j   <Plug>(easymotion-j)
   <Plug>(easymotion-prefix)gE   <Plug>(easymotion-gE)
   <Plug>(easymotion-prefix)ge   <Plug>(easymotion-ge)
   <Plug>(easymotion-prefix)E   <Plug>(easymotion-E)
   <Plug>(easymotion-prefix)e   <Plug>(easymotion-e)
   <Plug>(easymotion-prefix)B   <Plug>(easymotion-B)
   <Plug>(easymotion-prefix)b   <Plug>(easymotion-b)
   <Plug>(easymotion-prefix)W   <Plug>(easymotion-W)
   <Plug>(easymotion-prefix)w   <Plug>(easymotion-w)
   <Plug>(easymotion-prefix)T   <Plug>(easymotion-T)
   <Plug>(easymotion-prefix)t   <Plug>(easymotion-t)
   <Plug>(easymotion-prefix)s   <Plug>(easymotion-s)
   <Plug>(easymotion-prefix)F   <Plug>(easymotion-F)
   <Plug>(easymotion-prefix)f   <Plug>(easymotion-f)
x  <Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(1)<CR>
nos<Plug>(easymotion-activate) * :<C-U>call EasyMotion#activate(0)<CR>
   <Plug>(easymotion-dotrepeat) * :<C-U>call EasyMotion#DotRepeat()<CR>
x  <Plug>(easymotion-repeat) * <Esc>:<C-U>call EasyMotion#Repeat(1)<CR>
nos<Plug>(easymotion-repeat) * :<C-U>call EasyMotion#Repeat(0)<CR>
x  <Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(1,1)<CR>
nos<Plug>(easymotion-prev) * :<C-U>call EasyMotion#NextPrevious(0,1)<CR>
x  <Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(1,0)<CR>
nos<Plug>(easymotion-next) * :<C-U>call EasyMotion#NextPrevious(0,0)<CR>
x  <Plug>(easymotion-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,0)<CR>
nos<Plug>(easymotion-wl) * :<C-U>call EasyMotion#WBL(0,0)<CR>
x  <Plug>(easymotion-lineforward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,0)<CR>
nos<Plug>(easymotion-lineforward) * :<C-U>call EasyMotion#LineAnywhere(0,0)<CR>
x  <Plug>(easymotion-lineanywhere) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,2)<CR>
nos<Plug>(easymotion-lineanywhere) * :<C-U>call EasyMotion#LineAnywhere(0,2)<CR>
x  <Plug>(easymotion-bd-wl) * <Esc>:<C-U>call EasyMotion#WBL(1,2)<CR>
nos<Plug>(easymotion-bd-wl) * :<C-U>call EasyMotion#WBL(0,2)<CR>
x  <Plug>(easymotion-linebackward) * <Esc>:<C-U>call EasyMotion#LineAnywhere(1,1)<CR>
nos<Plug>(easymotion-linebackward) * :<C-U>call EasyMotion#LineAnywhere(0,1)<CR>
x  <Plug>(easymotion-bl) * <Esc>:<C-U>call EasyMotion#WBL(1,1)<CR>
nos<Plug>(easymotion-bl) * :<C-U>call EasyMotion#WBL(0,1)<CR>
x  <Plug>(easymotion-el) * <Esc>:<C-U>call EasyMotion#EL(1,0)<CR>
nos<Plug>(easymotion-el) * :<C-U>call EasyMotion#EL(0,0)<CR>
x  <Plug>(easymotion-gel) * <Esc>:<C-U>call EasyMotion#EL(1,1)<CR>
nos<Plug>(easymotion-gel) * :<C-U>call EasyMotion#EL(0,1)<CR>
x  <Plug>(easymotion-bd-el) * <Esc>:<C-U>call EasyMotion#EL(1,2)<CR>
nos<Plug>(easymotion-bd-el) * :<C-U>call EasyMotion#EL(0,2)<CR>
x  <Plug>(easymotion-jumptoanywhere) * <Esc>:<C-U>call EasyMotion#JumpToAnywhere(1,2)<CR>
nos<Plug>(easymotion-jumptoanywhere) * :<C-U>call EasyMotion#JumpToAnywhere(0,2)<CR>
x  <Plug>(easymotion-vim-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,1)<CR>
nos<Plug>(easymotion-vim-n) * :<C-U>call EasyMotion#Search(0,0,1)<CR>
x  <Plug>(easymotion-n) * <Esc>:<C-U>call EasyMotion#Search(1,0,0)<CR>
nos<Plug>(easymotion-n) * :<C-U>call EasyMotion#Search(0,0,0)<CR>
x  <Plug>(easymotion-bd-n) * <Esc>:<C-U>call EasyMotion#Search(1,2,0)<CR>
nos<Plug>(easymotion-bd-n) * :<C-U>call EasyMotion#Search(0,2,0)<CR>
x  <Plug>(easymotion-vim-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,1)<CR>
nos<Plug>(easymotion-vim-N) * :<C-U>call EasyMotion#Search(0,1,1)<CR>
x  <Plug>(easymotion-N) * <Esc>:<C-U>call EasyMotion#Search(1,1,0)<CR>
nos<Plug>(easymotion-N) * :<C-U>call EasyMotion#Search(0,1,0)<CR>
x  <Plug>(easymotion-eol-j) * <Esc>:<C-U>call EasyMotion#Eol(1,0)<CR>
nos<Plug>(easymotion-eol-j) * :<C-U>call EasyMotion#Eol(0,0)<CR>
x  <Plug>(easymotion-sol-k) * <Esc>:<C-U>call EasyMotion#Sol(1,1)<CR>
nos<Plug>(easymotion-sol-k) * :<C-U>call EasyMotion#Sol(0,1)<CR>
x  <Plug>(easymotion-sol-j) * <Esc>:<C-U>call EasyMotion#Sol(1,0)<CR>
nos<Plug>(easymotion-sol-j) * :<C-U>call EasyMotion#Sol(0,0)<CR>
x  <Plug>(easymotion-k) * <Esc>:<C-U>call EasyMotion#JK(1,1)<CR>
nos<Plug>(easymotion-k) * :<C-U>call EasyMotion#JK(0,1)<CR>
x  <Plug>(easymotion-j) * <Esc>:<C-U>call EasyMotion#JK(1,0)<CR>
nos<Plug>(easymotion-j) * :<C-U>call EasyMotion#JK(0,0)<CR>
x  <Plug>(easymotion-bd-jk) * <Esc>:<C-U>call EasyMotion#JK(1,2)<CR>
nos<Plug>(easymotion-bd-jk) * :<C-U>call EasyMotion#JK(0,2)<CR>
x  <Plug>(easymotion-eol-bd-jk) * <Esc>:<C-U>call EasyMotion#Eol(1,2)<CR>
nos<Plug>(easymotion-eol-bd-jk) * :<C-U>call EasyMotion#Eol(0,2)<CR>
x  <Plug>(easymotion-sol-bd-jk) * <Esc>:<C-U>call EasyMotion#Sol(1,2)<CR>
nos<Plug>(easymotion-sol-bd-jk) * :<C-U>call EasyMotion#Sol(0,2)<CR>
x  <Plug>(easymotion-eol-k) * <Esc>:<C-U>call EasyMotion#Eol(1,1)<CR>
nos<Plug>(easymotion-eol-k) * :<C-U>call EasyMotion#Eol(0,1)<CR>
x  <Plug>(easymotion-iskeyword-ge) * <Esc>:<C-U>call EasyMotion#EK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-ge) * :<C-U>call EasyMotion#EK(0,1)<CR>
x  <Plug>(easymotion-w) * <Esc>:<C-U>call EasyMotion#WB(1,0)<CR>
nos<Plug>(easymotion-w) * :<C-U>call EasyMotion#WB(0,0)<CR>
x  <Plug>(easymotion-bd-W) * <Esc>:<C-U>call EasyMotion#WBW(1,2)<CR>
nos<Plug>(easymotion-bd-W) * :<C-U>call EasyMotion#WBW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-w) * <Esc>:<C-U>call EasyMotion#WBK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-w) * :<C-U>call EasyMotion#WBK(0,0)<CR>
x  <Plug>(easymotion-gE) * <Esc>:<C-U>call EasyMotion#EW(1,1)<CR>
nos<Plug>(easymotion-gE) * :<C-U>call EasyMotion#EW(0,1)<CR>
x  <Plug>(easymotion-e) * <Esc>:<C-U>call EasyMotion#E(1,0)<CR>
nos<Plug>(easymotion-e) * :<C-U>call EasyMotion#E(0,0)<CR>
x  <Plug>(easymotion-bd-E) * <Esc>:<C-U>call EasyMotion#EW(1,2)<CR>
nos<Plug>(easymotion-bd-E) * :<C-U>call EasyMotion#EW(0,2)<CR>
x  <Plug>(easymotion-iskeyword-e) * <Esc>:<C-U>call EasyMotion#EK(1,0)<CR>
nos<Plug>(easymotion-iskeyword-e) * :<C-U>call EasyMotion#EK(0,0)<CR>
x  <Plug>(easymotion-b) * <Esc>:<C-U>call EasyMotion#WB(1,1)<CR>
nos<Plug>(easymotion-b) * :<C-U>call EasyMotion#WB(0,1)<CR>
x  <Plug>(easymotion-iskeyword-b) * <Esc>:<C-U>call EasyMotion#WBK(1,1)<CR>
nos<Plug>(easymotion-iskeyword-b) * :<C-U>call EasyMotion#WBK(0,1)<CR>
x  <Plug>(easymotion-iskeyword-bd-w) * <Esc>:<C-U>call EasyMotion#WBK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-w) * :<C-U>call EasyMotion#WBK(0,2)<CR>
x  <Plug>(easymotion-W) * <Esc>:<C-U>call EasyMotion#WBW(1,0)<CR>
nos<Plug>(easymotion-W) * :<C-U>call EasyMotion#WBW(0,0)<CR>
x  <Plug>(easymotion-bd-w) * <Esc>:<C-U>call EasyMotion#WB(1,2)<CR>
nos<Plug>(easymotion-bd-w) * :<C-U>call EasyMotion#WB(0,2)<CR>
x  <Plug>(easymotion-iskeyword-bd-e) * <Esc>:<C-U>call EasyMotion#EK(1,2)<CR>
nos<Plug>(easymotion-iskeyword-bd-e) * :<C-U>call EasyMotion#EK(0,2)<CR>
x  <Plug>(easymotion-ge) * <Esc>:<C-U>call EasyMotion#E(1,1)<CR>
nos<Plug>(easymotion-ge) * :<C-U>call EasyMotion#E(0,1)<CR>
x  <Plug>(easymotion-E) * <Esc>:<C-U>call EasyMotion#EW(1,0)<CR>
nos<Plug>(easymotion-E) * :<C-U>call EasyMotion#EW(0,0)<CR>
x  <Plug>(easymotion-bd-e) * <Esc>:<C-U>call EasyMotion#E(1,2)<CR>
nos<Plug>(easymotion-bd-e) * :<C-U>call EasyMotion#E(0,2)<CR>
x  <Plug>(easymotion-B) * <Esc>:<C-U>call EasyMotion#WBW(1,1)<CR>
nos<Plug>(easymotion-B) * :<C-U>call EasyMotion#WBW(0,1)<CR>
n  <Plug>(easymotion-overwin-w) * :<C-U>call EasyMotion#overwin#w()<CR>
n  <Plug>(easymotion-overwin-line) * :<C-U>call EasyMotion#overwin#line()<CR>
n  <Plug>(easymotion-overwin-f2) * :<C-U>call EasyMotion#OverwinF(2)<CR>
n  <Plug>(easymotion-overwin-f) * :<C-U>call EasyMotion#OverwinF(1)<CR>
x  <Plug>(easymotion-Tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,1)<CR>
nos<Plug>(easymotion-Tln) * :<C-U>call EasyMotion#TL(-1,0,1)<CR>
x  <Plug>(easymotion-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,0)<CR>
nos<Plug>(easymotion-t2) * :<C-U>call EasyMotion#T(2,0,0)<CR>
x  <Plug>(easymotion-t) * <Esc>:<C-U>call EasyMotion#T(1,1,0)<CR>
nos<Plug>(easymotion-t) * :<C-U>call EasyMotion#T(1,0,0)<CR>
x  <Plug>(easymotion-s) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-s) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,0)<CR>
nos<Plug>(easymotion-tn) * :<C-U>call EasyMotion#T(-1,0,0)<CR>
x  <Plug>(easymotion-bd-t2) * <Esc>:<C-U>call EasyMotion#T(2,1,2)<CR>
nos<Plug>(easymotion-bd-t2) * :<C-U>call EasyMotion#T(2,0,2)<CR>
x  <Plug>(easymotion-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,0)<CR>
nos<Plug>(easymotion-tl) * :<C-U>call EasyMotion#TL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tn) * :<C-U>call EasyMotion#T(-1,0,2)<CR>
x  <Plug>(easymotion-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,0)<CR>
nos<Plug>(easymotion-fn) * :<C-U>call EasyMotion#S(-1,0,0)<CR>
x  <Plug>(easymotion-bd-tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,2)<CR>
nos<Plug>(easymotion-bd-tl) * :<C-U>call EasyMotion#TL(1,0,2)<CR>
x  <Plug>(easymotion-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,0)<CR>
nos<Plug>(easymotion-fl) * :<C-U>call EasyMotion#SL(1,0,0)<CR>
x  <Plug>(easymotion-bd-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,2)<CR>
nos<Plug>(easymotion-bd-tl2) * :<C-U>call EasyMotion#TL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-f) * <Esc>:<C-U>call EasyMotion#S(1,1,0)<CR>
nos<Plug>(easymotion-f) * :<C-U>call EasyMotion#S(1,0,0)<CR>
x  <Plug>(easymotion-bd-fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-bd-fl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,1)<CR>
nos<Plug>(easymotion-Fl2) * :<C-U>call EasyMotion#SL(2,0,1)<CR>
x  <Plug>(easymotion-tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,0)<CR>
nos<Plug>(easymotion-tl2) * :<C-U>call EasyMotion#TL(2,0,0)<CR>
x  <Plug>(easymotion-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,0)<CR>
nos<Plug>(easymotion-f2) * :<C-U>call EasyMotion#S(2,0,0)<CR>
x  <Plug>(easymotion-Fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,1)<CR>
nos<Plug>(easymotion-Fln) * :<C-U>call EasyMotion#SL(-1,0,1)<CR>
x  <Plug>(easymotion-sln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-sln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,0)<CR>
nos<Plug>(easymotion-tln) * :<C-U>call EasyMotion#TL(-1,0,0)<CR>
x  <Plug>(easymotion-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,0)<CR>
nos<Plug>(easymotion-fl2) * :<C-U>call EasyMotion#SL(2,0,0)<CR>
x  <Plug>(easymotion-bd-fl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-bd-fl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-T2) * <Esc>:<C-U>call EasyMotion#T(2,1,1)<CR>
nos<Plug>(easymotion-T2) * :<C-U>call EasyMotion#T(2,0,1)<CR>
x  <Plug>(easymotion-bd-tln) * <Esc>:<C-U>call EasyMotion#TL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-tln) * :<C-U>call EasyMotion#TL(-1,0,2)<CR>
x  <Plug>(easymotion-T) * <Esc>:<C-U>call EasyMotion#T(1,1,1)<CR>
nos<Plug>(easymotion-T) * :<C-U>call EasyMotion#T(1,0,1)<CR>
x  <Plug>(easymotion-bd-t) * <Esc>:<C-U>call EasyMotion#T(1,1,2)<CR>
nos<Plug>(easymotion-bd-t) * :<C-U>call EasyMotion#T(1,0,2)<CR>
x  <Plug>(easymotion-Tn) * <Esc>:<C-U>call EasyMotion#T(-1,1,1)<CR>
nos<Plug>(easymotion-Tn) * :<C-U>call EasyMotion#T(-1,0,1)<CR>
x  <Plug>(easymotion-s2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-s2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl) * <Esc>:<C-U>call EasyMotion#TL(1,1,1)<CR>
nos<Plug>(easymotion-Tl) * :<C-U>call EasyMotion#TL(1,0,1)<CR>
x  <Plug>(easymotion-sn) * <Esc>:<C-U>call EasyMotion#S(-1,1,2)<CR>
nos<Plug>(easymotion-sn) * :<C-U>call EasyMotion#S(-1,0,2)<CR>
x  <Plug>(easymotion-Fn) * <Esc>:<C-U>call EasyMotion#S(-1,1,1)<CR>
nos<Plug>(easymotion-Fn) * :<C-U>call EasyMotion#S(-1,0,1)<CR>
x  <Plug>(easymotion-sl) * <Esc>:<C-U>call EasyMotion#SL(1,1,2)<CR>
nos<Plug>(easymotion-sl) * :<C-U>call EasyMotion#SL(1,0,2)<CR>
x  <Plug>(easymotion-Fl) * <Esc>:<C-U>call EasyMotion#SL(1,1,1)<CR>
nos<Plug>(easymotion-Fl) * :<C-U>call EasyMotion#SL(1,0,1)<CR>
x  <Plug>(easymotion-sl2) * <Esc>:<C-U>call EasyMotion#SL(2,1,2)<CR>
nos<Plug>(easymotion-sl2) * :<C-U>call EasyMotion#SL(2,0,2)<CR>
x  <Plug>(easymotion-bd-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,2)<CR>
nos<Plug>(easymotion-bd-fln) * :<C-U>call EasyMotion#SL(-1,0,2)<CR>
x  <Plug>(easymotion-F) * <Esc>:<C-U>call EasyMotion#S(1,1,1)<CR>
nos<Plug>(easymotion-F) * :<C-U>call EasyMotion#S(1,0,1)<CR>
x  <Plug>(easymotion-bd-f) * <Esc>:<C-U>call EasyMotion#S(1,1,2)<CR>
nos<Plug>(easymotion-bd-f) * :<C-U>call EasyMotion#S(1,0,2)<CR>
x  <Plug>(easymotion-F2) * <Esc>:<C-U>call EasyMotion#S(2,1,1)<CR>
nos<Plug>(easymotion-F2) * :<C-U>call EasyMotion#S(2,0,1)<CR>
x  <Plug>(easymotion-bd-f2) * <Esc>:<C-U>call EasyMotion#S(2,1,2)<CR>
nos<Plug>(easymotion-bd-f2) * :<C-U>call EasyMotion#S(2,0,2)<CR>
x  <Plug>(easymotion-Tl2) * <Esc>:<C-U>call EasyMotion#TL(2,1,1)<CR>
nos<Plug>(easymotion-Tl2) * :<C-U>call EasyMotion#TL(2,0,1)<CR>
x  <Plug>(easymotion-fln) * <Esc>:<C-U>call EasyMotion#SL(-1,1,0)<CR>
nos<Plug>(easymotion-fln) * :<C-U>call EasyMotion#SL(-1,0,0)<CR>
   <Plug>(asterisk-gz#) * asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 0, 'is_whole' : 0})
   <Plug>(asterisk-z#) * asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 0, 'is_whole' : 1})
   <Plug>(asterisk-g#) * asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 1, 'is_whole' : 0})
   <Plug>(asterisk-#) * asterisk#do(mode(1), {'direction' : 0, 'do_jump' : 1, 'is_whole' : 1})
   <Plug>(asterisk-gz*) * asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 0, 'is_whole' : 0})
   <Plug>(asterisk-z*) * asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 0, 'is_whole' : 1})
   <Plug>(asterisk-g*) * asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 1, 'is_whole' : 0})
   <Plug>(asterisk-*) * asterisk#do(mode(1), {'direction' : 1, 'do_jump' : 1, 'is_whole' : 1})
x  <Plug>(QuickScopeToggle) * :<C-U>call quick_scope#Toggle()<CR>
n  <Plug>(QuickScopeToggle) * :call quick_scope#Toggle()<CR>
n  <Plug>(QuickScopeT) * :<C-U>call quick_scope#Ready() | execute "normal!" v:count1 . quick_scope#Aim("T") | call quick_scope#Reload() | call quick_scope#DoubleTap()<CR>
x  <Plug>(QuickScopeT) * quick_scope#Ready() . quick_scope#Aim("T") . quick_scope#Reload() . quick_scope#DoubleTap()
o  <Plug>(QuickScopeT) * quick_scope#Ready() . quick_scope#Aim("T") . quick_scope#Reload() . quick_scope#DoubleTap()
n  <Plug>(QuickScopet) * :<C-U>call quick_scope#Ready() | execute "normal!" v:count1 . quick_scope#Aim("t") | call quick_scope#Reload() | call quick_scope#DoubleTap()<CR>
x  <Plug>(QuickScopet) * quick_scope#Ready() . quick_scope#Aim("t") . quick_scope#Reload() . quick_scope#DoubleTap()
o  <Plug>(QuickScopet) * quick_scope#Ready() . quick_scope#Aim("t") . quick_scope#Reload() . quick_scope#DoubleTap()
n  <Plug>(QuickScopeF) * :<C-U>call quick_scope#Ready() | execute "normal!" v:count1 . quick_scope#Aim("F") | call quick_scope#Reload() | call quick_scope#DoubleTap()<CR>
x  <Plug>(QuickScopeF) * quick_scope#Ready() . quick_scope#Aim("F") . quick_scope#Reload() . quick_scope#DoubleTap()
o  <Plug>(QuickScopeF) * quick_scope#Ready() . quick_scope#Aim("F") . quick_scope#Reload() . quick_scope#DoubleTap()
n  <Plug>(QuickScopef) * :<C-U>call quick_scope#Ready() | execute "normal!" v:count1 . quick_scope#Aim("f") | call quick_scope#Reload() | call quick_scope#DoubleTap()<CR>
x  <Plug>(QuickScopef) * quick_scope#Ready() . quick_scope#Aim("f") . quick_scope#Reload() . quick_scope#DoubleTap()
o  <Plug>(QuickScopef) * quick_scope#Ready() . quick_scope#Aim("f") . quick_scope#Reload() . quick_scope#DoubleTap()
   <Plug>(incsearch-fuzzyspell-stay) * incsearch#go(<SNR>98_config_fuzzyspell({'is_stay': 1}))
   <Plug>(incsearch-fuzzyspell-?) * incsearch#go(<SNR>98_config_fuzzyspell({'command': '?'}))
   <Plug>(incsearch-fuzzyspell-/) * incsearch#go(<SNR>98_config_fuzzyspell())
   <Plug>(incsearch-fuzzyword-stay) * incsearch#go(<SNR>98_config_fuzzyword({'is_stay': 1}))
   <Plug>(incsearch-fuzzyword-?) * incsearch#go(<SNR>98_config_fuzzyword({'command': '?'}))
   <Plug>(incsearch-fuzzyword-/) * incsearch#go(<SNR>98_config_fuzzyword())
   <Plug>(incsearch-fuzzy-stay) * incsearch#go(<SNR>98_config_fuzzy({'is_stay': 1}))
   <Plug>(incsearch-fuzzy-?) * incsearch#go(<SNR>98_config_fuzzy({'command': '?'}))
   <Plug>(incsearch-fuzzy-/) * incsearch#go(<SNR>98_config_fuzzy())
   <Plug>(_incsearch-g#) * g#
   <Plug>(_incsearch-g*) * g*
   <Plug>(_incsearch-#) * #
   <Plug>(_incsearch-*) * *
   <Plug>(_incsearch-N) * g:incsearch#consistent_n_direction && !v:searchforward ? 'n' : 'N'
   <Plug>(_incsearch-n) * g:incsearch#consistent_n_direction && !v:searchforward ? 'N' : 'n'
   <Plug>(incsearch-nohl-g#)   <Plug>(incsearch-nohl)<Plug>(_incsearch-g#)
   <Plug>(incsearch-nohl-g*)   <Plug>(incsearch-nohl)<Plug>(_incsearch-g*)
   <Plug>(incsearch-nohl-#)   <Plug>(incsearch-nohl)<Plug>(_incsearch-#)
   <Plug>(incsearch-nohl-*)   <Plug>(incsearch-nohl)<Plug>(_incsearch-*)
   <Plug>(incsearch-nohl-N)   <Plug>(incsearch-nohl)<Plug>(_incsearch-N)
   <Plug>(incsearch-nohl-n)   <Plug>(incsearch-nohl)<Plug>(_incsearch-n)
   <Plug>(incsearch-nohl2) * incsearch#autocmd#auto_nohlsearch(2)
   <Plug>(incsearch-nohl0) * incsearch#autocmd#auto_nohlsearch(0)
   <Plug>(incsearch-nohl) * incsearch#autocmd#auto_nohlsearch(1)
   <Plug>(incsearch-stay) * incsearch#go({'command': '/', 'is_stay': 1})
   <Plug>(incsearch-backward) * incsearch#go({'command': '?'})
   <Plug>(incsearch-forward) * incsearch#go({'command': '/'})
x  <C-Right>     <Plug>(textmanip-move-right)
x  <C-Left>      <Plug>(textmanip-move-left)
x  <C-Up>        <Plug>(textmanip-move-up)
x  <C-Down>      <Plug>(textmanip-move-down)
x  <Plug>(textmanip-move-left-1col-r) * :<C-U>call <SNR>95_obsolete('1col')<CR>
x  <Plug>(textmanip-move-left-1col-i) * :<C-U>call <SNR>95_obsolete('1col')<CR>
x  <Plug>(textmanip-move-left-1col) * :<C-U>call <SNR>95_obsolete('1col')<CR>
x  <Plug>(textmanip-move-right-1col-r) * :<C-U>call <SNR>95_obsolete('1col')<CR>
x  <Plug>(textmanip-move-right-1col-i) * :<C-U>call <SNR>95_obsolete('1col')<CR>
x  <Plug>(textmanip-move-right-1col) * :<C-U>call <SNR>95_obsolete('1col')<CR>
x  <Plug>(textmanip-toggle-mode) * :<C-U>call textmanip#mode('toggle')<CR>gv
n  <Plug>(textmanip-toggle-mode) * :<C-U>call textmanip#mode('toggle')<CR>
x  <Plug>(textmanip-blank-below) * :<C-U>call textmanip#start("blank", "v", "x", "auto")<CR>
x  <Plug>(textmanip-blank-above) * :<C-U>call textmanip#start("blank", "^", "x", "auto")<CR>
x  <Plug>(textmanip-move1-right-r) * :<C-U>call textmanip#start("move1", ">", "x", "replace")<CR>
x  <Plug>(textmanip-move1-right-i) * :<C-U>call textmanip#start("move1", ">", "x", "insert")<CR>
x  <Plug>(textmanip-move1-right) * :<C-U>call textmanip#start("move1", ">", "x", "auto")<CR>
x  <Plug>(textmanip-move1-left-r) * :<C-U>call textmanip#start("move1", "<", "x", "replace")<CR>
x  <Plug>(textmanip-move1-left-i) * :<C-U>call textmanip#start("move1", "<", "x", "insert")<CR>
x  <Plug>(textmanip-move1-left) * :<C-U>call textmanip#start("move1", "<", "x", "auto")<CR>
x  <Plug>(textmanip-move-right-r) * :<C-U>call textmanip#start("move", ">", "x", "replace")<CR>
x  <Plug>(textmanip-move-right-i) * :<C-U>call textmanip#start("move", ">", "x", "insert")<CR>
x  <Plug>(textmanip-move-right) * :<C-U>call textmanip#start("move", ">", "x", "auto")<CR>
x  <Plug>(textmanip-move-left-r) * :<C-U>call textmanip#start("move", "<", "x", "replace")<CR>
x  <Plug>(textmanip-move-left-i) * :<C-U>call textmanip#start("move", "<", "x", "insert")<CR>
x  <Plug>(textmanip-move-left) * :<C-U>call textmanip#start("move", "<", "x", "auto")<CR>
x  <Plug>(textmanip-move-down-r) * :<C-U>call textmanip#start("move", "v", "x", "replace")<CR>
x  <Plug>(textmanip-move-down-i) * :<C-U>call textmanip#start("move", "v", "x", "insert")<CR>
x  <Plug>(textmanip-move-down) * :<C-U>call textmanip#start("move", "v", "x", "auto")<CR>
x  <Plug>(textmanip-move-up-r) * :<C-U>call textmanip#start("move", "^", "x", "replace")<CR>
x  <Plug>(textmanip-move-up-i) * :<C-U>call textmanip#start("move", "^", "x", "insert")<CR>
x  <Plug>(textmanip-move-up) * :<C-U>call textmanip#start("move", "^", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-right-r) * :<C-U>call textmanip#start("duplicate", ">", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-right-i) * :<C-U>call textmanip#start("duplicate", ">", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-right) * :<C-U>call textmanip#start("duplicate", ">", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-left-r) * :<C-U>call textmanip#start("duplicate", "<", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-left-i) * :<C-U>call textmanip#start("duplicate", "<", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-left) * :<C-U>call textmanip#start("duplicate", "<", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-down-r) * :<C-U>call textmanip#start("duplicate", "v", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-down-i) * :<C-U>call textmanip#start("duplicate", "v", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-down) * :<C-U>call textmanip#start("duplicate", "v", "x", "auto")<CR>
x  <Plug>(textmanip-duplicate-up-r) * :<C-U>call textmanip#start("duplicate", "^", "x", "replace")<CR>
x  <Plug>(textmanip-duplicate-up-i) * :<C-U>call textmanip#start("duplicate", "^", "x", "insert")<CR>
x  <Plug>(textmanip-duplicate-up) * :<C-U>call textmanip#start("duplicate", "^", "x", "auto")<CR>
n  <Plug>(textmanip-blank-below) * :<C-U>call textmanip#start("blank", "v", "n", "auto")<CR>
n  <Plug>(textmanip-blank-above) * :<C-U>call textmanip#start("blank", "^", "n", "auto")<CR>
n  <Plug>(textmanip-move-right-r) * :<C-U>call textmanip#start("move", ">", "n", "replace")<CR>
n  <Plug>(textmanip-move-right-i) * :<C-U>call textmanip#start("move", ">", "n", "insert")<CR>
n  <Plug>(textmanip-move-right) * :<C-U>call textmanip#start("move", ">", "n", "auto")<CR>
n  <Plug>(textmanip-move-left-r) * :<C-U>call textmanip#start("move", "<", "n", "replace")<CR>
n  <Plug>(textmanip-move-left-i) * :<C-U>call textmanip#start("move", "<", "n", "insert")<CR>
n  <Plug>(textmanip-move-left) * :<C-U>call textmanip#start("move", "<", "n", "auto")<CR>
n  <Plug>(textmanip-move-down-r) * :<C-U>call textmanip#start("move", "v", "n", "replace")<CR>
n  <Plug>(textmanip-move-down-i) * :<C-U>call textmanip#start("move", "v", "n", "insert")<CR>
n  <Plug>(textmanip-move-down) * :<C-U>call textmanip#start("move", "v", "n", "auto")<CR>
n  <Plug>(textmanip-move-up-r) * :<C-U>call textmanip#start("move", "^", "n", "replace")<CR>
n  <Plug>(textmanip-move-up-i) * :<C-U>call textmanip#start("move", "^", "n", "insert")<CR>
n  <Plug>(textmanip-move-up) * :<C-U>call textmanip#start("move", "^", "n", "auto")<CR>
n  <Plug>(textmanip-duplicate-down-r) * :<C-U>call textmanip#start("duplicate", "v", "n", "replace")<CR>
n  <Plug>(textmanip-duplicate-down-i) * :<C-U>call textmanip#start("duplicate", "v", "n", "insert")<CR>
n  <Plug>(textmanip-duplicate-down) * :<C-U>call textmanip#start("duplicate", "v", "n", "auto")<CR>
n  <Plug>(textmanip-duplicate-up-r) * :<C-U>call textmanip#start("duplicate", "^", "n", "replace")<CR>
n  <Plug>(textmanip-duplicate-up-i) * :<C-U>call textmanip#start("duplicate", "^", "n", "insert")<CR>
n  <Plug>(textmanip-duplicate-up) * :<C-U>call textmanip#start("duplicate", "^", "n", "auto")<CR>
n  <Plug>(EasyAlignOperator) * :set opfunc=<SNR>94_easy_align_op<CR>g@
v  <Plug>(EasyAlignRepeat) * :<C-U>call <SNR>94_repeat_in_visual()<CR>
n  <Plug>(EasyAlignRepeat) * :call <SNR>94_easy_align_repeat()<CR>
v  <Plug>(LiveEasyAlign) * :<C-U>call <SNR>94_live_easy_align_op(visualmode(), 1)<CR>
n  <Plug>(LiveEasyAlign) * :set opfunc=<SNR>94_live_easy_align_op<CR>g@
v  <Plug>(EasyAlign) * :<C-U>call <SNR>94_easy_align_op(visualmode(), 1)<CR>
n  <Plug>(EasyAlign) * :set opfunc=<SNR>94_easy_align_op<CR>g@
n  <Plug>(PickerListUserCommands) * :PickerListUserCommands<CR>
n  <Plug>(PickerHelp) * :PickerHelp<CR>
n  <Plug>(PickerBufferTag) * :PickerBufferTag<CR>
n  <Plug>(PickerStag) * :PickerStag<CR>
n  <Plug>(PickerTag) * :PickerTag<CR>
n  <Plug>(PickerBufferVsplit) * :PickerBufferVsplit<CR>
n  <Plug>(PickerBufferSplit) * :PickerBufferSplit<CR>
n  <Plug>(PickerBuffer) * :PickerBuffer<CR>
n  <Plug>(PickerVsplit) * :PickerVsplit<CR>
n  <Plug>(PickerTabdrop) * :PickerTabdrop<CR>
n  <Plug>(PickerTabedit) * :PickerTabedit<CR>
n  <Plug>(PickerSplit) * :PickerSplit<CR>
n  <Plug>(PickerEdit) * :PickerEdit<CR>
n  <Plug>(startify-open-buffers) * :<C-U>call startify#open_buffers()<CR>
x  <Plug>(open-url-search-wikipedia) * :<C-U>OpenSearchURL wikipedia <C-R>=open_url#get_selection()<CR><CR>
n  <Plug>(open-url-search-wikipedia) * :OpenSearchURL wikipedia <cword><CR>
x  <Plug>(open-url-search-google) * :<C-U>OpenSearchURL google <C-R>=open_url#get_selection()<CR><CR>
n  <Plug>(open-url-search-google) * :OpenSearchURL google <cword><CR>
x  <Plug>(open-url-search-so) * :<C-U>OpenSearchURL so <C-R>=open_url#get_selection()<CR><CR>
n  <Plug>(open-url-search-so) * :OpenSearchURL so <cword><CR>
x  <Plug>(open-url-search) * :<C-U>OpenSearchURL <C-R>=open_url#get_selection()<CR><CR>
n  <Plug>(open-url-search) * :OpenSearchURL <cword><CR>
x  <Plug>(open-url-browser) * :<C-U>OpenURL <C-R>=open_url#get_selection()<CR><CR>
n  <Plug>(open-url-browser) * :OpenURL <cfile><CR>
n  <Plug>(dirvish_git_prev_file) * :<C-U>call dirvish_git#jump_to_prev_file()<CR>
n  <Plug>(dirvish_git_next_file) * :<C-U>call dirvish_git#jump_to_next_file()<CR>
n  <Plug>(dirvish_vsplit_up) * :<C-U>vsplit|exe 'Dirvish' fnameescape(fnamemodify(@%, ':p'.(@%[-1:]=~'[\\/]'?':h':'').repeat(':h',v:count1)))<CR>
n  <Plug>(dirvish_split_up) * :<C-U>split|exe 'Dirvish' fnameescape(fnamemodify(@%, ':p'.(@%[-1:]=~'[\\/]'?':h':'').repeat(':h',v:count1)))<CR>
n  <Plug>(dirvish_up) * :<C-U>exe 'Dirvish' fnameescape(fnamemodify(@%, ':p'.(@%[-1:]=~'[\\/]'?':h':'').repeat(':h',v:count1)))<CR>
x  <Plug>(openbrowser-smart-search) * :<C-U>call openbrowser#_keymap_smart_search('v')<CR>
n  <Plug>(openbrowser-smart-search) * :<C-U>call openbrowser#_keymap_smart_search('n')<CR>
x  <Plug>(openbrowser-search) * :<C-U>call openbrowser#_keymap_search('v')<CR>
n  <Plug>(openbrowser-search) * :<C-U>call openbrowser#_keymap_search('n')<CR>
x  <Plug>(openbrowser-open-incognito) * :<C-U>call openbrowser#_keymap_open('v', 0, ['--incognito'])<CR>
n  <Plug>(openbrowser-open-incognito) * :<C-U>call openbrowser#_keymap_open('n', 0, ['--incognito'])<CR>
x  <Plug>(openbrowser-open) * :<C-U>call openbrowser#_keymap_open('v')<CR>
n  <Plug>(openbrowser-open) * :<C-U>call openbrowser#_keymap_open('n')<CR>
v  <F6>          <Plug>(openbrowser-smart-search)
n  <F6>        * :execute "normal \<Plug>(openbrowser-smart-search)"|silent !nsBt<CR>
   <C-P>         <Plug>(ctrlp)
n  <Plug>(ctrlp) * :<C-U>CtrlPMRU<CR>
n  <Plug>CalendarT * :cal calendar#show(2)<CR>
n  <Plug>CalendarH * :cal calendar#show(1)<CR>
n  <Plug>CalendarV * :cal calendar#show(0)<CR>
n  <Plug>FontsizeQuit   <SNR>72_quit
n  <Plug>FontsizeSetDefault   <SNR>72_setDefault<SNR>72_(fontsize)
n  <Plug>FontsizeDefault   <SNR>72_default<SNR>72_(fontsize)
n  <Plug>FontsizeDec   <SNR>72_dec<SNR>72_(fontsize)
n  <Plug>FontsizeInc   <SNR>72_inc<SNR>72_(fontsize)
n  <Plug>FontsizeBegin   <SNR>72_begin<SNR>72_(fontsize)
n  <Plug>(characterize) & :<C-U>echo <SNR>64_info(matchstr(getline('.')[col('.')-1:-1],'.'))<CR>
   <C-K>       * <Plug>(ale_previous_wrap)
   <C-J>       * <Plug>(ale_next_wrap)
n  <Plug>(ale_repeat_selection) * :ALERepeatSelection<CR>
n  <Plug>(ale_code_action) * :ALECodeAction<CR>
n  <Plug>(ale_filerename) * :ALEFileRename<CR>
n  <Plug>(ale_rename) * :ALERename<CR>
n  <Plug>(ale_import) * :ALEImport<CR>
n  <Plug>(ale_documentation) * :ALEDocumentation<CR>
n  <Plug>(ale_hover) * :ALEHover<CR>
n  <Plug>(ale_find_references) * :ALEFindReferences<CR>
n  <Plug>(ale_go_to_implementation_in_vsplit) * :ALEGoToImplementation -vsplit<CR>
n  <Plug>(ale_go_to_implementation_in_split) * :ALEGoToImplementation -split<CR>
n  <Plug>(ale_go_to_implementation_in_tab) * :ALEGoToImplementation -tab<CR>
n  <Plug>(ale_go_to_type_definition_in_vsplit) * :ALEGoToTypeDefinitionIn -vsplit<CR>
n  <Plug>(ale_go_to_type_definition_in_split) * :ALEGoToTypeDefinition -split<CR>
n  <Plug>(ale_go_to_type_definition_in_tab) * :ALEGoToTypeDefinition -tab<CR>
n  <Plug>(ale_go_to_type_definition) * :ALEGoToTypeDefinition<CR>
n  <Plug>(ale_go_to_definition_in_vsplit) * :ALEGoToDefinition -vsplit<CR>
n  <Plug>(ale_go_to_definition_in_split) * :ALEGoToDefinition -split<CR>
n  <Plug>(ale_go_to_definition_in_tab) * :ALEGoToDefinition -tab<CR>
n  <Plug>(ale_go_to_definition) * :ALEGoToDefinition<CR>
n  <Plug>(ale_fix) * :ALEFix<CR>
n  <Plug>(ale_detail) * :ALEDetail<CR>
n  <Plug>(ale_lint) * :ALELint<CR>
n  <Plug>(ale_reset_buffer) * :ALEResetBuffer<CR>
n  <Plug>(ale_disable_buffer) * :ALEDisableBuffer<CR>
n  <Plug>(ale_enable_buffer) * :ALEEnableBuffer<CR>
n  <Plug>(ale_toggle_buffer) * :ALEToggleBuffer<CR>
n  <Plug>(ale_reset) * :ALEReset<CR>
n  <Plug>(ale_disable) * :ALEDisable<CR>
n  <Plug>(ale_enable) * :ALEEnable<CR>
n  <Plug>(ale_toggle) * :ALEToggle<CR>
n  <Plug>(ale_last) * :ALELast<CR>
n  <Plug>(ale_first) * :ALEFirst<CR>
n  <Plug>(ale_next_wrap_warning) * :ALENext -wrap -warning<CR>
n  <Plug>(ale_next_warning) * :ALENext -warning<CR>
n  <Plug>(ale_next_wrap_error) * :ALENext -wrap -error<CR>
n  <Plug>(ale_next_error) * :ALENext -error<CR>
n  <Plug>(ale_next_wrap) * :ALENextWrap<CR>
n  <Plug>(ale_next) * :ALENext<CR>
n  <Plug>(ale_previous_wrap_warning) * :ALEPrevious -wrap -warning<CR>
n  <Plug>(ale_previous_warning) * :ALEPrevious -warning<CR>
n  <Plug>(ale_previous_wrap_error) * :ALEPrevious -wrap -error<CR>
n  <Plug>(ale_previous_error) * :ALEPrevious -error<CR>
n  <Plug>(ale_previous_wrap) * :ALEPreviousWrap<CR>
n  <Plug>(ale_previous) * :ALEPrevious<CR>
o  <Plug>(fzf-maps-o) * <C-C>:<C-U>call fzf#vim#maps('o', 0)<CR>
x  <Plug>(fzf-maps-x) * :<C-U>call fzf#vim#maps('x', 0)<CR>
n  <Plug>(fzf-maps-n) * :<C-U>call fzf#vim#maps('n', 0)<CR>
n  <2-LeftMouse>   <Plug>(matchup-double-click)
n  <Plug>(matchup-reload) * :<C-U>MatchupReload<CR>
n  <Plug>(matchup-double-click) * :<C-U>call matchup#text_obj#double_click()<CR>
o  <Plug>(matchup-a%) * :<C-U>call matchup#text_obj#delimited(0, 0, 'delim_all')<CR>
o  <Plug>(matchup-i%) * :<C-U>call matchup#text_obj#delimited(1, 0, 'delim_all')<CR>
x  <Plug>(matchup-a%) * :<C-U>call matchup#text_obj#delimited(0, 1, 'delim_all')<CR>
x  <Plug>(matchup-i%) * :<C-U>call matchup#text_obj#delimited(1, 1, 'delim_all')<CR>
o  <Plug>(matchup-Z%) * :<C-U>call matchup#motion#op('Z%')<CR>
x  <Plug>(matchup-Z%)   <SNR>54_(matchup-Z%)
n  <Plug>(matchup-Z%) * :<C-U>call matchup#motion#jump_inside_prev(0)<CR>
o  <Plug>(matchup-z%) * :<C-U>call matchup#motion#op('z%')<CR>
x  <Plug>(matchup-z%)   <SNR>54_(matchup-z%)
n  <Plug>(matchup-z%) * :<C-U>call matchup#motion#jump_inside(0)<CR>
o  <Plug>(matchup-[%) * :<C-U>call matchup#motion#op('[%')<CR>
o  <Plug>(matchup-]%) * :<C-U>call matchup#motion#op(']%')<CR>
x  <Plug>(matchup-[%)   <SNR>54_(matchup-[%)
x  <Plug>(matchup-]%)   <SNR>54_(matchup-]%)
n  <Plug>(matchup-[%) * :<C-U>call matchup#motion#find_unmatched(0, 0)<CR>
n  <Plug>(matchup-]%) * :<C-U>call matchup#motion#find_unmatched(0, 1)<CR>
o  <Plug>(matchup-g%) * :<C-U>call matchup#motion#op('g%')<CR>
x  <Plug>(matchup-g%)   <SNR>54_(matchup-g%)
o  <Plug>(matchup-%) * :<C-U>call matchup#motion#op('%')<CR>
x  <Plug>(matchup-%)   <SNR>54_(matchup-%)
n  <Plug>(matchup-g%) * :<C-U>call matchup#motion#find_matching_pair(0, 0)<CR>
n  <Plug>(matchup-%) * :<C-U>call matchup#motion#find_matching_pair(0, 1)<CR>
n  <Plug>(matchup-hi-surround) * :<C-U>call matchup#matchparen#highlight_surrounding()<CR>
n  <Plug>NERDCommenterAltDelims * :call nerdcommenter#SwitchToAlternativeDelimiters(1)<CR>
x  <Plug>NERDCommenterUncomment * :call nerdcommenter#Comment("x", "Uncomment")<CR>
n  <Plug>NERDCommenterUncomment * :call nerdcommenter#Comment("n", "Uncomment")<CR>
x  <Plug>NERDCommenterAlignBoth * :call nerdcommenter#Comment("x", "AlignBoth")<CR>
n  <Plug>NERDCommenterAlignBoth * :call nerdcommenter#Comment("n", "AlignBoth")<CR>
x  <Plug>NERDCommenterAlignLeft * :call nerdcommenter#Comment("x", "AlignLeft")<CR>
n  <Plug>NERDCommenterAlignLeft * :call nerdcommenter#Comment("n", "AlignLeft")<CR>
n  <Plug>NERDCommenterAppend * :call nerdcommenter#Comment("n", "Append")<CR>
x  <Plug>NERDCommenterYank * :call nerdcommenter#Comment("x", "Yank")<CR>
n  <Plug>NERDCommenterYank * :call nerdcommenter#Comment("n", "Yank")<CR>
x  <Plug>NERDCommenterSexy * :call nerdcommenter#Comment("x", "Sexy")<CR>
n  <Plug>NERDCommenterSexy * :call nerdcommenter#Comment("n", "Sexy")<CR>
x  <Plug>NERDCommenterInvert * :call nerdcommenter#Comment("x", "Invert")<CR>
n  <Plug>NERDCommenterInvert * :call nerdcommenter#Comment("n", "Invert")<CR>
n  <Plug>NERDCommenterToEOL * :call nerdcommenter#Comment("n", "ToEOL")<CR>
x  <Plug>NERDCommenterNested * :call nerdcommenter#Comment("x", "Nested")<CR>
n  <Plug>NERDCommenterNested * :call nerdcommenter#Comment("n", "Nested")<CR>
x  <Plug>NERDCommenterMinimal * :call nerdcommenter#Comment("x", "Minimal")<CR>
n  <Plug>NERDCommenterMinimal * :call nerdcommenter#Comment("n", "Minimal")<CR>
x  <Plug>NERDCommenterToggle * :call nerdcommenter#Comment("x", "Toggle")<CR>
n  <Plug>NERDCommenterToggle * :call nerdcommenter#Comment("n", "Toggle")<CR>
x  <Plug>NERDCommenterComment * :call nerdcommenter#Comment("x", "Comment")<CR>
n  <Plug>NERDCommenterComment * :call nerdcommenter#Comment("n", "Comment")<CR>
n  <Plug>GitGutterPreviewHunk * :call gitgutter#utility#warn('Please change your map <Plug>GitGutterPreviewHunk to <Plug>(GitGutterPreviewHunk)')<CR>
n  <Plug>(GitGutterPreviewHunk) * :GitGutterPreviewHunk<CR>
n  <Plug>GitGutterUndoHunk * :call gitgutter#utility#warn('Please change your map <Plug>GitGutterUndoHunk to <Plug>(GitGutterUndoHunk)')<CR>
n  <Plug>(GitGutterUndoHunk) * :GitGutterUndoHunk<CR>
n  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('Please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
n  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
x  <Plug>GitGutterStageHunk * :call gitgutter#utility#warn('Please change your map <Plug>GitGutterStageHunk to <Plug>(GitGutterStageHunk)')<CR>
x  <Plug>(GitGutterStageHunk) * :GitGutterStageHunk<CR>
n  <Plug>GitGutterPrevHunk * &diff ? '[c' : ":\<C-U>call gitgutter#utility#warn('Please change your map \<Plug>GitGutterPrevHunk to \<Plug>(GitGutterPrevHunk)')\<CR>"
n  <Plug>(GitGutterPrevHunk) * &diff ? '[c' : ":\<C-U>execute v:count1 . 'GitGutterPrevHunk'\<CR>"
n  <Plug>GitGutterNextHunk * &diff ? ']c' : ":\<C-U>call gitgutter#utility#warn('Please change your map \<Plug>GitGutterNextHunk to \<Plug>(GitGutterNextHunk)')\<CR>"
n  <Plug>(GitGutterNextHunk) * &diff ? ']c' : ":\<C-U>execute v:count1 . 'GitGutterNextHunk'\<CR>"
x  <Plug>(GitGutterTextObjectOuterVisual) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
x  <Plug>(GitGutterTextObjectInnerVisual) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
o  <Plug>(GitGutterTextObjectOuterPending) * :<C-U>call gitgutter#hunk#text_object(0)<CR>
o  <Plug>(GitGutterTextObjectInnerPending) * :<C-U>call gitgutter#hunk#text_object(1)<CR>
n  <Plug>fugitive: & <Nop>
n  <Plug>fugitive:y<C-G> & :<C-U>call setreg(v:register, fugitive#Object(@%))<CR>
x  <Plug>DsfTextObjectI * :<C-U>call <SNR>27_FunctionCallTextObject('i')<CR>
o  <Plug>DsfTextObjectI * :<C-U>call <SNR>27_FunctionCallTextObject('i')<CR>
x  <Plug>DsfTextObjectA * :<C-U>call <SNR>27_FunctionCallTextObject('a')<CR>
o  <Plug>DsfTextObjectA * :<C-U>call <SNR>27_FunctionCallTextObject('a')<CR>
n  <Plug>DsfNextChange * :call <SNR>27_ChangeNextSurroundingFunctionCall()<CR>
n  <Plug>DsfChange * :call <SNR>27_ChangeSurroundingFunctionCall()<CR>
n  <Plug>DsfNextDelete * :call <SNR>27_DeleteNextSurroundingFunctionCall()<CR>
n  <Plug>DsfDelete * :call <SNR>27_DeleteSurroundingFunctionCall()<CR>
i  <Plug>(peekaboo) * <C-\><C-O>:<C-U>call peekaboo#aboo()<CR>
i  <C-G>S        <Plug>ISurround
i  <C-G>s        <Plug>Isurround
i  <C-S>         <Plug>Isurround
i  <Plug>ISurround * <C-R>=<SNR>105_insert(1)<CR>
i  <Plug>Isurround * <C-R>=<SNR>105_insert()<CR>
i  <S-Tab>       <Plug>SuperTabBackward
i  <Plug>SuperTabBackward & <C-R>=SuperTab('p')<CR>
i  <Plug>SuperTabForward & <C-R>=SuperTab('n')<CR>
i  <Plug>(ale_complete) * <C-\><C-O>:ALEComplete<CR>
i  <Plug>(fzf-maps-i) * <C-O>:call fzf#vim#maps('i', 0)<CR>
i  <Plug>(fzf-complete-buffer-line) * fzf#vim#complete#buffer_line()
i  <Plug>(fzf-complete-line) * fzf#vim#complete#line()
i  <Plug>(fzf-complete-file-ag) * fzf#vim#complete#path('ag -l -g ""')
i  <Plug>(fzf-complete-file) * fzf#vim#complete#path("find . -path '*/\.*' -prune -o -type f -print -o -type l -print | sed 's:^..::'")
i  <Plug>(fzf-complete-path) * fzf#vim#complete#path("find . -path '*/\.*' -prune -o -print | sed '1d;s:^..::'")
i  <Plug>(fzf-complete-word) * fzf#vim#complete#word()
i  <C-G>%        <Plug>(matchup-c_g%)
i  <Plug>(matchup-c_g%) * <C-\><C-O>:call matchup#motion#insert_mode()<CR>
i  <Plug>NERDCommenterInsert * <C-\><C-O>:call nerdcommenter#Comment('i', "Insert")<CR>
i  <Tab>         <Plug>SuperTabForward
